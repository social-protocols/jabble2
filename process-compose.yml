environment:
  - "FORCE_COLOR=1"
processes:

  npm:
    command: bun install --color=always

  build:
    # initial mill build, so that vite finds the js files referenced in main.js
    command: mill --jobs 0 --color true '{backend.compile,frontend.fastLinkJS}'

  vite:
    command: bunx vite dev --port 12345 --strictPort
    ports:
      - 12345:12345
    depends_on:
      npm:
        condition: process_completed_successfully
      build:
        # vite should start, even if the initial build failed
        condition: process_completed

  front:
    # frontend has separate mill watch process, because backend changes should not trigger page reloads
    command: mill --jobs 0 --color true --watch frontend.fastLinkJS
    env:
      LOG_LEVEL:debug
    depends_on:
      build:
        # watch should start, even if the initial build failed
        condition: process_completed

  back:
    # backend has separate mill watch process, because frontend changes should not trigger backend restarts
    command: mill --jobs 0 --color true --watch backend.runBackground
    env:
      LOG_LEVEL:debug
    depends_on:
      build:
        # watch should start, even if the initial build failed
        condition: process_completed

  query:
    command: find queries.sql schema.sql query_template.go.tmpl sqlc.yml | entr -nr scripts/generate-query-code

  rpc-re:
    # Workaround after changing sloth rpc api trait.
    # Somehow a change in the rpc trait is not detected by the compiler.
    # We need to clean and rebuild...
    # TODO: isolate and report bug
    command: find rpc | entr -np bash -c 'echo "cleaning rpc... (incremental compilation workaround)"; mill clean "{rpc,frontend,backend}"; touch rpc/src/rpc/RpcApi.scala'

  seed:
    command: echo schema.sql | entr -n bash -c "echo seeding database...; rm -f data.db; sqlite3 -init /dev/null data.db < schema.sql && echo success."

  auth:
    command: |
      # https://github.com/keratin/authn-server/tree/main/docs#readme
      docker volume rm authn-data
      docker run --name authn --rm -p 3000:3000 -p 3001:3001 \
        -v authn-data:/data \
        -e APP_DOMAINS="localhost" \
        -e AUTHN_URL="http://localhost:3000" \
        -e PORT=3001 \
        -e PUBLIC_PORT=3000 \
        -e SECRET_KEY_BASE="test" \
        -e DATABASE_URL="sqlite3://localhost//data/authn.db" \
        -e ENABLE_SIGNUP=false \
        -e HTTP_AUTH_USERNAME="admin" \
        -e HTTP_AUTH_PASSWORD="adminpw" \
        keratin/authn-server:latest \
        sh -c "./authn migrate && ./authn server"

